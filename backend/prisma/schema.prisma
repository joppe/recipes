// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String          @id @default(uuid())
  name              String          @db.VarChar(255)
  email             String          @unique @db.VarChar(255)
  password          String          @db.VarChar(255)

  @@map("users")
}

model Chef {
  id                String          @id @default(uuid())
  name              String          @unique @db.VarChar(255)
  skill             Int 
  media             Media?          @relation(fields: [mediaId], references: [id])
  mediaId           String?         @map("media_id")
  meals             Meal[]

  @@map("chefs")
}

model Media {
  id                String          @id @default(uuid())
  type              String          @db.VarChar(255)
  title             String          @db.VarChar(255)
  url               String          @unique @db.VarChar(255)
  chefs             Chef[]
  recipes           Recipe[]
  products          Product[]
  instructions      Instruction[]

  @@map("media")
}

model Meal {
  id                String          @id @default(uuid())
  date              DateTime        @unique @default(now())
  score             Int?        
  chef              Chef            @relation(fields: [chefId], references: [id])
  chefId            String          @map("chef_id")
  recipe            Recipe          @relation(fields: [recipeId], references: [id])
  recipeId          String          @map("recipe_id")

  @@map("meals")
}

model Recipe {
  id                String          @id @default(uuid())
  name              String          @unique @db.VarChar(255)
  preparationTime   Int?            @map("preparation_time")
  cookingTime       Int?            @map("cooking_time")
  difficulty        Int
  course            String?
  servings          Int
  source            String?
  media             Media?          @relation(fields: [mediaId], references: [id])
  mediaId           String?         @map("media_id")
  meals             Meal[]
  instructions      Instruction[]
  ingredients       Ingredient[]

  @@map("recipes")
}

model Unit {
  id                String          @id @default(uuid())
  name              String          @unique
  abbreviation      String
  ingredients       Ingredient[]

  @@map("units")
}

model Product {
  id                String          @id @default(uuid())
  name              String          @unique
  description       String?     
  media             Media?          @relation(fields: [mediaId], references: [id])
  mediaId           String?         @map("media_id")
  ingredients       Ingredient[]

  @@map("products")
}

model Instruction {
  id                String          @id @default(uuid())
  order             Int     
  text              String      
  media             Media?          @relation(fields: [mediaId], references: [id])
  mediaId           String?         @map("media_id")
  recipe            Recipe          @relation(fields: [recipeId], references: [id])
  recipeId          String          @map("recipe_id")

  @@map("instructions")
}

model Ingredient {
  id                String          @id @default(uuid())
  amount            Float       
  preparation       String      
  recipe            Recipe          @relation(fields: [recipeId], references: [id])
  recipeId          String          @map("recipe_id")
  product           Product         @relation(fields: [productId], references: [id])
  productId         String          @map("product_id")
  unit              Unit            @relation(fields: [unitId], references: [id])
  unitId            String          @map("unit_id")

  @@map("ingredients")
}
